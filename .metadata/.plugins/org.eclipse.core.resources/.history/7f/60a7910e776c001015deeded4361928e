package com.day_9;

import java.util.*;

class Patients {
    String id;
    String name;

    Patients(String id, String name) {
        this.id = id;
        this.name = name;
    }

    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (!(obj instanceof Patients)) return false;
        Patients p = (Patients) obj;
        return this.id.equals(p.id); 
    }

    public int hashCode() {
        return id.hashCode();
    }

    public String toString() {
        return "ID: " + id + ", Name: " + name;
    }
}

public class HashSet_Ex {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        HashSet<Patients> patientSet = new HashSet<>();

        while (true) {
            System.out.println("\n--- Hospital Menu ---");
            System.out.println("1. Add Patient");
            System.out.println("2. Remove Patient");
            System.out.println("3. Show All Patients");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            int choice = sc.nextInt();
            sc.nextLine(); 
            switch (choice) {
                case 1:
                    System.out.print("Enter Patient ID: ");
                    String id = sc.nextLine();
                    System.out.print("Enter Name: ");
                    String name = sc.nextLine();
                    Patients newPatient = new Patients(id, name);
                    if (patientSet.add(newPatient)) {
                        System.out.println("Patient added.");
                    } else {
                        System.out.println("Patient with this ID already exists.");
                    }
                    break;

                case 2:
                    System.out.print("Enter Patient ID to remove: ");
                    String rid = sc.nextLine();
                    boolean removed = patientSet.removeIf(p -> p.id.equalsIgnoreCase(rid));
                    if (removed) {
                        System.out.println("Patient removed.");
                    } else {
                        System.out.println("Patient not found.");
                    }
                    break;

                case 3:
                    if (patientSet.isEmpty()) {
                        System.out.println("No patients found.");
                    } else {
                        System.out.println("Patient List:");
                        for (Patients p : patientSet) {
                            System.out.println(p);
                        }
                    }
                    break;

                case 4:
                    System.out.println("Exiting...");
                    sc.close();
                    return;

                default:
                    System.out.println("Invalid choice.");
                    sc.close();
            }
        }
    }
}
