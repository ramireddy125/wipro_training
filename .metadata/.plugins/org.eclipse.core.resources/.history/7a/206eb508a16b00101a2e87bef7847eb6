package com.day_8;
import java.util.*;

class Patient {
    private String name;
    private int age;
    private String disease;

    public Patient(String name, int age, String disease) {
        this.name = name;
        this.age = age;
        this.disease = disease;
    }

    public String getName() {
        return name;
    }

    public void setDisease(String disease) {
        this.disease = disease;
    }

    public String getDisease() {
        return disease;
    }

    public void displayDetails() {
        System.out.println("Name: " + name + "\nAge: " + age + "\nDisease: " + disease);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj instanceof Patient) {
            Patient other = (Patient) obj;
            return this.name.equalsIgnoreCase(other.name);
        }
        return false;
    }

    @Override
    public String toString() {
        return name + " (Age: " + age + ", Disease: " + disease + ")";
    }
}

public class ArrayList_HospitalOPD {
    public static void main(String[] args) {
        ArrayList<Patient> patientList = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\n--- Hospital OPD Menu ---");
            System.out.println("1. Add New Patient");
            System.out.println("2. View All Patients");
            System.out.println("3. View Patient by Index");
            System.out.println("4. Update Patient Disease");
            System.out.println("5. Remove Patient by Index");
            System.out.println("6. Remove Patient by Name");
            System.out.println("7. Check if Patient Exists");
            System.out.println("8. Show Total Patients");
            System.out.println("9. Clear All Records");
            System.out.println("10. Find First/Last Index of a Patient");
            System.out.println("11. Check if List is Empty");
            System.out.println("12. Exit");
            System.out.print("Choose option: ");

            int choice = scanner.nextInt();
            scanner.nextLine();  // consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter name: ");
                    String name = scanner.nextLine();
                    System.out.print("Enter age: ");
                    int age = scanner.nextInt();
                    scanner.nextLine();  // consume newline
                    System.out.print("Enter disease: ");
                    String disease = scanner.nextLine();
                    patientList.add(new Patient(name, age, disease));
                    System.out.println("Patient added successfully!");
                    break;

                case 2:
                    if (patientList.isEmpty()) {
                        System.out.println("No patients found.");
                    } else {
                        System.out.println("All Patients:");
                        for (Patient p : patientList) {
                            p.displayDetails();
                            System.out.println("---");
                        }
                    }
                    break;

                case 3:
                    System.out.print("Enter index: ");
                    int idx = scanner.nextInt();
                    if (idx >= 0 && idx < patientList.size()) {
                        patientList.get(idx).displayDetails();
                    } else {
                        System.out.println("Invalid index!");
                    }
                    break;

                case 4:
                    System.out.print("Enter patient name to update disease: ");
                    String updateName = scanner.nextLine();
                    boolean updated = false;
                    for (Patient p : patientList) {
                        if (p.getName().equalsIgnoreCase(updateName)) {
                            System.out.print("Enter new disease: ");
                            String newDisease = scanner.nextLine();
                            p.setDisease(newDisease);
                            System.out.println("Disease updated.");
                            updated = true;
                        }
                    }
                    if (!updated) System.out.println("Patient not found.");
                    break;

                case 5:
                    System.out.print("Enter index to remove: ");
                    int removeIdx = scanner.nextInt();
                    if (removeIdx >= 0 && removeIdx < patientList.size()) {
                        patientList.remove(removeIdx);
                        System.out.println("Patient removed.");
                    } else {
                        System.out.println("Invalid index!");
                    }
                    break;

                case 6:
                    System.out.print("Enter name to remove: ");
                    String removeName = scanner.nextLine();
                    boolean removed = patientList.removeIf(p -> p.getName().equalsIgnoreCase(removeName));
                    System.out.println(removed ? "Patient removed." : "Patient not found.");
                    break;

                case 7:
                    System.out.print("Enter patient name to check: ");
                    String checkName = scanner.nextLine();
                    boolean exists = patientList.stream().anyMatch(p -> p.getName().equalsIgnoreCase(checkName));
                    System.out.println(exists ? "Patient exists." : "Patient does not exist.");
                    break;

                case 8:
                    System.out.println("Total Patients: " + patientList.size());
                    break;

                case 9:
                    patientList.clear();
                    System.out.println("All records cleared.");
                    break;

                case 10:
                    System.out.print("Enter patient name to find index: ");
                    String findName = scanner.nextLine();
                    Patient temp = new Patient(findName, 0, "");
                    int firstIndex = patientList.indexOf(temp);
                    int lastIndex = patientList.lastIndexOf(temp);
                    if (firstIndex != -1) {
                        System.out.println("First index: " + firstIndex + ", Last index: " + lastIndex);
                    } else {
                        System.out.println("Patient not found.");
                    }
                    break;

                case 11:
                    System.out.println(patientList.isEmpty() ? "List is empty." : "List is not empty.");
                    break;

                case 12:
                    System.out.println("Exiting... Thank you!");
                    scanner.close();
                    return;

                default:
                    System.out.println("Invalid option! Try again.");
            }
        }
    }
}
